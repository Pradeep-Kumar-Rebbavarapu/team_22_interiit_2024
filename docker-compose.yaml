version: '3'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3033:3033"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network

  daphne:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["daphne", "-b", "0.0.0.0", "-p", "8001", "backend.asgi:application"]
    ports:
      - "8001:8001"
    depends_on:
      - backend
      - redis
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "8443:443"
    depends_on:
      - frontend
      - daphne
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=interiit
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
